#version 460

#if CONFIG
name: Internal/OutlineFullScreenPass
depth:
    testEnable: False
stencil:
    testEnable: True
    back:
        passOp: keep
        compareOp: notEqual
        reference: 1
blend:
    - srcAlpha oneMinusSrcAlpha
cull: none
#endif

#if VERT
layout(location = 0) out vec2 o_uv;

void main()
{
    vec4 c_Positions[6] = 
    {
        { -1, -1, 0.5, 1 },
        { -1, 1, 0.5, 1 },
        { 1, 1, 0.5, 1 },

        { -1, -1, 0.5, 1 },
        { 1, 1, 0.5, 1 },
        { 1, -1, 0.5, 1 }
    };

    gl_Position = c_Positions[gl_VertexIndex];
    o_uv = gl_Position.xy * 0.5 + 1;
}
#endif

#if FRAG

layout(location = 0) in vec2 i_uv;
layout(location = 0) out vec4 o_Color;

layout(set = 0, binding = 0) uniform sampler2D mainTex;

void main() {
    ivec2 coord = ivec2(gl_FragCoord.xy);
    
    vec4 c00 = texelFetch(mainTex, coord + ivec2(-1,-1), 0);
    vec4 c01 = texelFetch(mainTex, coord + ivec2(-1, 0), 0);
    vec4 c02 = texelFetch(mainTex, coord + ivec2(-1, 1), 0);
    vec4 c10 = texelFetch(mainTex, coord + ivec2(0, -1), 0);
    vec4 c12 = texelFetch(mainTex, coord + ivec2(0, 1), 0);
    vec4 c20 = texelFetch(mainTex, coord + ivec2(1, -1), 0);
    vec4 c21 = texelFetch(mainTex, coord + ivec2(1, 0), 0);
    vec4 c22 = texelFetch(mainTex, coord + ivec2(1, 1), 0);

    // x axis
    vec4 xVal = c00 * -1 + c01 * -2 + c02 * -1 + c20 * 1 + c21 * 2 + c22 * 1;
    vec4 yVal = c00 * -1 + c10 * -2 + c20 * -1 + c02 * 1 + c12 * 2 + c22 * 1;

    if (dot(xVal, xVal) != 0 || dot(yVal, yVal) != 0)
    {
        o_Color = vec4(1, 0.647, 0, 1);
        return;
    }

    o_Color = vec4(0,0,0,0);
}

#endif
