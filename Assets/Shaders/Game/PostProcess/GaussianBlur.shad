#version 450

#if CONFIG
name : Game / PostProcess / GaussianBlur
features :
    - [ _Horizontal, _Vertical ]
#endif

#include "Utils/FullScreen.glsl"

#if FRAG
layout(location = 0) in vec2 uv;
layout(location = 0) out vec4 color0;

uniform sampler2D source;
uniform GaussianBlur
{
    vec4 sourceTexelSize;
} param;

vec4 BlurSample5x5(vec2 center, vec2 axis)
{
    vec4 c = texture(source, center) * 0.38317757;

    vec4 s0 = 0.30841121495f * texture(source, center + axis * 1.21212121212 * param.sourceTexelSize.xy);
    vec4 s1 = 0.30841121495f * texture(source, center - axis * 1.21212121212 * param.sourceTexelSize.xy);

    return c + s0 + s1;
}

// https://github.com/Experience-Monks/glsl-fast-gaussian-blur/blob/master/9.glsl
vec4 BlurSample9x9(vec2 center, vec2 axis) {
  vec4 color = vec4(0.0);
  vec2 off1 = vec2(1.3846153846) * axis;
  vec2 off2 = vec2(3.2307692308) * axis;
  color += texture(source, center) * 0.2270270270;
  color += texture(source, center + (off1 * param.sourceTexelSize.xy)) * 0.3162162162;
  color += texture(source, center - (off1 * param.sourceTexelSize.xy)) * 0.3162162162;
  color += texture(source, center + (off2 * param.sourceTexelSize.xy)) * 0.0702702703;
  color += texture(source, center - (off2 * param.sourceTexelSize.xy)) * 0.0702702703;
  return color;
}

#ifdef _Horizontal
    vec4 Blur()
    {
        return BlurSample9x9(uv, vec2(1, 0));
    }
#endif

#ifdef _Vertical
    vec4 Blur()
    {
        return BlurSample9x9(uv, vec2(0, 1));
    }
#endif

void main()
{
    color0 = Blur();
}

#endif

