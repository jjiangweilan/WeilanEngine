#version 450
#include "Common/Common.glsl"

#if CONFIG
name: Game/Cloud
cull: none
#endif

struct v2f {
    vec3 positionWS;
    vec3 normalWS;
    vec4 shadowCoord;
    vec2 uv;
};

#if VERT
layout(location = 0) in vec3 iPosition;
layout(location = 1) in vec3 iNormal;
layout(location = 2) in vec2 iUV;

layout(location = 0) out v2f vOut;
void main()
{
    vec3 positionWS = vec3(pconst.model * vec4(iPosition, 1)).xyz;
    vOut.normalWS = (inverse(transpose(mat3(pconst.model))) * iNormal);
    vOut.shadowCoord = scene.worldToShadow * vec4(positionWS, 1.0);
    vOut.positionWS = positionWS.xyz;
    vOut.uv = iUV;
    gl_Position = scene.viewProjection * vec4(positionWS, 1);
}
#endif

#if FRAG

layout(set = SET_MATERIAL) uniform Cloud
{
    vec4 position;
    float size;
    float delta;
    float freq;
    float amp;
} prop;

layout(set = SET_MATERIAL) uniform sampler2D noiseTex;
layout(set = SET_GLOBAL, binding = 7) uniform Global
{
    float time;
} g;

#define USE_PERLIN_NOISE_3D
#define NOISE_WHITE_NOISE_TEX noiseTex
#include "Lib/Noise.glsl"

layout(location = 0) in v2f fragInput;
layout(location = 0) out vec4 oColor;

void main()
{
    vec3 center = pconst.model[3].xyz + prop.position.xyz;
    vec3 dir = normalize(fragInput.positionWS.xyz - scene.viewPos.xyz);
    vec3 start = fragInput.positionWS.xyz;
    vec3 curr = start;

    oColor = vec4(prop.amp * (perlinNoise3D(prop.freq * fragInput.positionWS.xyz) * 0.5f + 0.5f));
}
#endif
